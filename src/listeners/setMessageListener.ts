import { calendarManager } from "@/utils/calendar";
import { HearManager } from "@puregram/hear";
import { InlineKeyboard, MessageContext, Telegram } from "puregram";
import callbackGetGroup from "./callbacks/callbackGetGroup";
import scheduleOfMirea from "@/utils/scheduleOfMirea";

export const setMessageListener = (telegram: Telegram): void => {
  const manager = new HearManager<MessageContext>();

  manager.hear("/start", (ctx: MessageContext) => {
    ctx.reply(
      "üìö –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è!\n\n–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö:",
      {
        reply_markup: InlineKeyboard.keyboard([]),
      }
    );
  });

  manager.hear("/help", (ctx: MessageContext) => {
    ctx.reply("Hello, I'm here to help you!");
  });

  manager.hear("/info", (ctx: MessageContext) => {
    ctx.reply("Hello, I'm here to help you!");
  });

  manager.hear(
    /^\/?[–ê-–Ø–Å–∞-—è—ë]{4}-?\d{2}-?\d{2}/i,
    async (ctx: MessageContext) => {
      const matchGroupName = ctx.text?.match(
        /^\/?([–ê-–Ø–Å–∞-—è—ë]{4})-?(\d{2})-?(\d{2})/i
      );

      if (!matchGroupName || matchGroupName.length < 3) {
        return ctx.reply(`–Ø –Ω–µ –ø–æ–Ω—è–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã ${ctx.text} ;(`);
      }

      const normalizedGroupName = matchGroupName.splice(1, 4).join("-");

      const group = await scheduleOfMirea.getGroupSchedule(
        normalizedGroupName,
        ctx.chatId
      );

      if (!group) {
        return ctx.reply(
          `–Ø –Ω–µ –Ω–∞—à–µ–ª –≥—Ä—É–ø–ø—ã —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º ${normalizedGroupName} ;(`
        );
      }

      return ctx.reply(
        `–ö–∞–ª–µ–Ω–¥–∞—Ä—å ${group.calTitle || ""} –Ω–∞ ${new Date()
          .toLocaleString("ru")
          .slice(0, 10)}`,
        {
          reply_markup: group.getViewFor(),
        }
      );
    }
  );

  telegram.updates.on("message", manager.middleware);
};
